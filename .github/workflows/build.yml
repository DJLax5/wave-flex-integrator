name: Build and Release Electron App

# Trigger the workflow only when a tag is pushed
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install npm dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the Electron app (no publish)
      - name: Build the Electron app
        run: npm run build

      # Step 5: Remove unpacked binaries (conditional based on OS)
      - name: Remove unpacked directories (Linux & macOS)
        if: runner.os != 'Windows'
        run: rm -rf dist/*-unpacked

      - name: Remove unpacked directories (Windows)
        if: runner.os == 'Windows'
        run: Remove-Item -Recurse -Force dist\*-unpacked

      # Step 6: Upload the build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: WaveFlexIntegrator-${{ matrix.os }}
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Download all build artifacts
      - name: Download Ubuntu artifact
        uses: actions/download-artifact@v3
        with:
          name: WaveFlexIntegrator-ubuntu-latest
          path: dist/ubuntu

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: WaveFlexIntegrator-windows-latest
          path: dist/windows

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: WaveFlexIntegrator-macos-latest
          path: dist/macos

      # Step 2: Create GitHub release and upload the build artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/ubuntu/**/*.AppImage
            dist/windows/**/*.exe
            dist/macos/**/*.dmg
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
